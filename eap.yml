- name: EAP Compliance Check
  hosts: tag_Role_eap:application_eap
  gather_facts: yes
  become: yes

  tasks: 

    - name: Build EC2 info
      block: 

        - name: Gather Instance per customers for ec2
          ec2_instance_facts:
            region: eu-west-1
          register: ec2_details

        - name: Extract needed info
          set_fact:
            ec2_needed: "{{ ec2_details | json_query(query) }}"
          vars:
            query: "instances[*].[private_ip_address, image_id, key_name, instance_type, tags ]"

        - set_fact:
            ec2_eap_facts: {}

        - name: Build a Dictionary keyed with hostname
          set_fact:
            ec2_eap_dict: 
              "{{ eap_facts | combine(
                  { item[0]: 
                    { 
                      'image_id': item[1], 
                      'key_name': item[2], 
                      'instance_type': item[3], 
                      'tags': item[4] 
                    } 
                  }
                ) 
              }}"
          loop: "{{ ec2_needed }}"

      when: "'ec2' is in group_names"
      run_once: yes
      delegate_to: localhost
      become: no


    - name: Build Azure info
      block: 

        - name: Gather Instance per customers for Azure
          azure_rm_resource_facts:
            resource_type: VirtualMachines
            provider: compute
            api_version: "2019-07-01"
          register: az_details
          run_once: yes
          delegate_to: localhost
          become: no

        - set_fact:
            az_eap_facts: {}

        - name: Extract needed info
          set_fact: 
            az_eap_facts: 
              "{{ az_eap_facts | combine(
                  { item.properties.networkProfile.networkInterfaces.0.id.split('/')|last: 
                    { 
                      'image_id': item.properties.storageProfile.imageReference,
                      'key_name': item.properties.osProfile.adminUsername, 
                      'instance_type': item.properties.hardwareProfile.vmSize, 
                      'tags': item.tags|default({}),
                      'rg': item.properties.networkProfile.networkInterfaces.0.id.split('/')[4]
                    } 
                  }
                ) 
              }}"
          loop: "{{ az_details.response }}"

        - set_fact:
            az_ip_facts: {}

        - name: Get IP from nics
          azure_rm_networkinterface_info:
            resource_group: "{{ item.value.rg }}"
            name: "{{ item.key }}"
          register: az_ip_facts
          loop: "{{ az_eap_facts | dict2items }}"

        - debug: 
            var: az_ip_facts

        - set_fact:
            az_ip_dict: {}

        - name: Build IP dict
          set_fact: 
            az_ip_dict:    
              "{{ az_ip_dict | combine(  
                  { item.networkinterfaces.0.name: item.networkinterfaces.0.ip_configurations.0.private_ip_address }
              ) }}"
          loop: "{{ az_ip_facts.results }}"
                
        - debug: 
            var: az_ip_dict

        - set_fact:
            az_eap_dict: {}

        - name: Build Azure EAP dict
          set_fact: 
            az_eap_dict:    
              "{{ az_eap_dict | combine(  
                  { item.value: az_eap_facts[item.key] }
              ) }}"
          loop: "{{ az_ip_dict | dict2items }}"

        - debug: 
            var: az_eap_dict

        - set_fact:
            az_rg_dict: {}

        - name: Build a list of ip for each RG
          set_fact: 
            "{{ az_rg_dict | combine(
                { item.value.tags.Customer: item.key }
            )}}"  
          when: item.value.tags.Customer is defined
          loop: "{{ az_eap_dict | dict2items }}"



      when: "'azure' is in group_names"
      run_once: yes
      delegate_to: localhost
      become: no

   